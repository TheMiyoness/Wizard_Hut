//Global Variables -> Local Variables
key_right = (keyboard_check(vk_right) || keyboard_check(ord("D")));
key_left = (keyboard_check(vk_left) || keyboard_check(ord("A")));
key_up = (keyboard_check(vk_up) || keyboard_check(ord("W")));
key_down =  (keyboard_check(vk_down) || keyboard_check(ord("S")));
walkspeed_step = walkspeed * (keyboard_check(vk_shift) + 1);

//Variables
var bbox_side;

hsp = (key_right - key_left) * walkspeed_step;
vsp = (key_down - key_up) * walkspeed_step;
hsp_0 = hsp > 0;
vsp_0 = vsp > 0;


//can put (hsp > 0) calc and (bbox_right - x) into its own variable, since calcing more than once

//Movement

//Player is moving
if(key_left || key_right || key_up || key_down){
	//Horizontal Collision
	if(hsp_0){
		bbox_side = bbox_right;	
	}else{
		bbox_side = bbox_left;
	};  

	if((tilemap_get_at_pixel(tilemap, bbox_side + hsp, bbox_top) != 0)
		|| (tilemap_get_at_pixel(tilemap, bbox_side + hsp, bbox_bottom) != 0)){
		if(hsp_0){
			//the 32 and 31 here are the size in pixels of the width of the collision tile
			//the (bbox_right - x) is to set the right side of boundary box to the tile instead of the origin
			x = x - (x mod 32) + 31 - (bbox_right - x);
		}else{
			x = x - (x mod 32) - (bbox_left - x);
		};
		hsp = 0;
	};
	x += hsp;

	//Vertical Collision
	if(vsp_0){
		bbox_side  = bbox_bottom;	
	}else{
		bbox_side = bbox_top;
	};
	if((tilemap_get_at_pixel(tilemap, bbox_left, bbox_side + vsp) != 0)  
		|| (tilemap_get_at_pixel(tilemap, bbox_right, bbox_side + vsp) != 0)){
		if(vsp_0){
			y = y - (y mod 32) + 31 - (bbox_bottom - y);
		}else{
			y = y - (y mod 32) - (bbox_top - y );
		};
		vsp = 0;
	};
	y += vsp;
//Player is not moving
}else{
	
}
	


//Actions

//Inventory
